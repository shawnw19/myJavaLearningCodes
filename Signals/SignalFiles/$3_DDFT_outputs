Comment:
1 the ddft is in fact a self-convolution:
corresponding sin and cos time the signal itself, if the frequency of the inputs corresponds to ith,
then the product of sinwi(=1 or -1) and corresponding input will be near 1 or -1,
this finally make the ith output very large in absolute value.
The orthogonality of sinusoids is the foundation to this transform.
2 however, the performance for large n and period is unsatisfactory:
when they increase the concentrated frequency is often near the twice of period if n and period are mutually prime, half if they are not.

output1:
Number of time or samples: 32
Periods over the samples: 3
Number of samples delay: 0

Transformed sequence is:
Index  Real  Imaginary
  0    0.00     0.00
  1   -0.56    -0.56
  2   -2.13    -1.42
  3   -3.62    -0.72
  4   -2.41     1.00
  5   -0.14     0.34
  6    0.21     0.31
  7    1.81    -0.36
  8    0.00     0.00
  9    1.51     0.00
 10    0.05     0.24
 11   -0.17     0.11
 12   -1.00    -0.41
 13   -0.43    -1.04
 14    0.10    -0.50
 15    0.04    -0.06
 16   -0.00     0.00
 17   -0.05     0.05
 18   -0.28     0.42
 19   -0.22     1.10
 20    0.41     1.00
 21    0.18     0.08
 22    0.21    -0.14
 23   -0.30    -1.48
 24    0.00    -0.00
 25   -0.00    -1.84
 26    0.37    -0.07
 27    0.21     0.31
 28   -1.00     2.41
 29   -3.41     1.41
 30   -2.51    -0.50
 31   -0.65    -0.44

Using Apache.Commons.Math:
//FastFourierTransformer - complex number
//number of inputs must be 2^n
No. 0:    0.00,   0.00
No. 1:   -0.00,   0.00
No. 2:   -0.00,   0.00
No. 3:   -0.00, -16.00
No. 4:   -0.00,  -0.00
No. 5:   -0.00,  -0.00
No. 6:    0.00,  -0.00
No. 7:   -0.00,   0.00
No. 8:   -0.00,  -0.00
No. 9:    0.00,  -0.00
No.10:   -0.00,  -0.00
No.11:    0.00,  -0.00
No.12:    0.00,  -0.00
No.13:    0.00,   0.00
No.14:    0.00,  -0.00
No.15:    0.00,   0.00
No.16:   -0.00,   0.00
No.17:    0.00,  -0.00
No.18:    0.00,   0.00
No.19:    0.00,   0.00
No.20:    0.00,   0.00
No.21:    0.00,   0.00
No.22:   -0.00,   0.00
No.23:    0.00,   0.00
No.24:   -0.00,   0.00
No.25:   -0.00,  -0.00
No.26:    0.00,   0.00
No.27:   -0.00,   0.00
No.28:   -0.00,   0.00
No.29:   -0.00,  16.00
No.30:   -0.00,  -0.00
No.31:   -0.00,  -0.00

------------------
Using Apache.Commons.Math:
/* FastSineTransfomer! number of inputs
 must be 2^n */
[ 0]:  0.00
[ 1]:  0.00
[ 2]: -0.00
[ 3]:  0.00
[ 4]: -0.00
[ 5]:  0.00
[ 6]: 16.00
[ 7]: -0.00
[ 8]:  0.00
[ 9]: -0.00
[10]:  0.00
[11]: -0.00
[12]:  0.00
[13]:  0.00
[14]: -0.00
[15]:  0.00
[16]:  0.00
[17]: -0.00
[18]:  0.00
[19]: -0.00
[20]:  0.00
[21]: -0.00
[22]:  0.00
[23]: -0.00
[24]:  0.00
[25]:  0.00
[26]: -0.00
[27]: -0.00
[28]: -0.00
[29]:  0.00
[30]: -0.00
[31]:  0.00


 Using Apache.Commons.Math:
 /* FastCosineTransfomer! number of inputs
 must be 2^n+1 */
 [ 0]:  0.27
 [ 1]:  3.23
 [ 2]:  0.31
 [ 3]:  4.30
 [ 4]:  0.52
 [ 5]: 12.24
 [ 6]: -4.39
 [ 7]: -7.29
 [ 8]: -0.32
 [ 9]: -2.41
 [10]: -0.15
 [11]: -1.35
 [12]: -0.09
 [13]: -0.90
 [14]: -0.07
 [15]: -0.67
 [16]: -0.05
 [17]: -0.53
 [18]: -0.04
 [19]: -0.44
 [20]: -0.04
 [21]: -0.38
 [22]: -0.03
 [23]: -0.34
 [24]: -0.03
 [25]: -0.31
 [26]: -0.03
 [27]: -0.29
 [28]: -0.02
 [29]: -0.28
 [30]: -0.02
 [31]: -0.27
 [32]: -0.02